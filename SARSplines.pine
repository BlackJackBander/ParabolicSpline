//@version=6
indicator('Modified SAR with Spline Smoothing', overlay = true, shorttitle = 'Spline SAR')

// Input parameters
sar_start = input.float(0.02, 'SAR Start', minval = 0.001, maxval = 0.2)
sar_inc = input.float(0.02, 'SAR Increment', minval = 0.001, maxval = 0.2)
sar_max = input.float(0.2, 'SAR Maximum', minval = 0.01, maxval = 0.5)
smooth_factor = input.int(15, 'Smoothing Factor', minval = 5, maxval = 50)
show_original_sar = input.bool(true, 'Show Original SAR')
show_smoothed_sar = input.bool(true, 'Show Smoothed SAR')
show_points = input.bool(true, 'Show Position Points')

// Используем встроенную функцию SAR PineScript
sar_original = ta.sar(sar_start, sar_inc, sar_max)

// Упрощенное сглаживание SAR с использованием скользящих средних
smoothSAR(series, length) =>
    // Используем комбинацию разных методов сглаживания
    float ema1 = ta.ema(series, length)
    float ema2 = ta.ema(ema1, math.max(1, length / 2))
    float wma = ta.wma(series, length)

    // Комбинируем методы для лучшего сглаживания
    ema2 * 0.5 + wma * 0.3 + series * 0.2

// Альтернативный метод сглаживания - адаптивная средняя
adaptiveSmooth(series, length) =>
    float volatility = ta.atr(length) / close
    int adaptive_length = math.max(5, math.min(50, int(length * (1.0 + volatility * 10))))
    ta.sma(series, adaptive_length)

// Основной расчет сглаженного SAR
sar_smoothed = smoothSAR(sar_original, smooth_factor)

// Определяем позицию цены относительно оригинального SAR
string position = close > sar_original ? 'Above SAR' : 'Below SAR'

// Визуализация
// Оригинальный SAR
plot(show_original_sar ? sar_original : na, 'Original SAR', color = color.rgb(255, 0, 0, 80), linewidth = 2, style = plot.style_line)

// Сглаженный SAR
plot(show_smoothed_sar ? sar_smoothed : na, 'Smoothed SAR', color = color.rgb(0, 0, 255), linewidth = 3, style = plot.style_line)

// Точки положения цены относительно SAR
color point_color = position == 'Above SAR' ? color.green : color.orange
plotshape(show_points and show_smoothed_sar, 'Position', shape.circle, location.abovebar, color = point_color, size = size.small)

// Линия цены закрытия
plot(close, 'Close Price', color = color.black, linewidth = 1)

// Таблица с значениями
var table info_table = table.new(position.top_right, 2, 4, bgcolor = color.white, border_width = 1)
if barstate.islast
    table.cell(info_table, 0, 0, 'Original SAR', bgcolor = color.red, text_color = color.white)
    table.cell(info_table, 1, 0, str.tostring(math.round(sar_original, 4)), bgcolor = color.red, text_color = color.white)

    table.cell(info_table, 0, 1, 'Smoothed SAR', bgcolor = color.blue, text_color = color.white)
    table.cell(info_table, 1, 1, str.tostring(math.round(sar_smoothed, 4)), bgcolor = color.blue, text_color = color.white)

    table.cell(info_table, 0, 2, 'Close Price', bgcolor = color.gray, text_color = color.white)
    table.cell(info_table, 1, 2, str.tostring(math.round(close, 4)), bgcolor = color.gray, text_color = color.white)

    table.cell(info_table, 0, 3, 'Position', bgcolor = position == 'Above SAR' ? color.green : color.orange, text_color = color.white)
    table.cell(info_table, 1, 3, position, bgcolor = position == 'Above SAR' ? color.green : color.orange, text_color = color.white)

// Условия для алертов
alertcondition(ta.crossover(close, sar_original), 'Price crossed above SAR', 'Price crossed above SAR')
alertcondition(ta.crossunder(close, sar_original), 'Price crossed below SAR', 'Price crossed below SAR')
alertcondition(ta.crossover(close, sar_smoothed), 'Price crossed above Smoothed SAR', 'Price crossed above Smoothed SAR')
alertcondition(ta.crossunder(close, sar_smoothed), 'Price crossed below Smoothed SAR', 'Price crossed below Smoothed SAR')

// Легенда на графике
var label legend = label.new(na, na, '', xloc = xloc.bar_time, yloc = yloc.abovebar, style = label.style_label_down, color = color.white, textcolor = color.black)
if barstate.islast
    label.set_xy(legend, time, high * 1.01)
    label.set_text(legend, 'Original SAR (red) | Smoothed SAR (blue) | Close (black)')
